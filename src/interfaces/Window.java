/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;
import java.sql.Array;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import oracle.jdbc.OracleResultSet;
import oracle.ord.im.OrdImage;
import oracle.sql.REF;
import oracle.sql.STRUCT;
import projetbdm.Miniature;
import projetbdm.ProjetBDM;
import projetbdm.Thesaurus;

/**
 *
 * @author cmolin
 */
public class Window extends javax.swing.JFrame {
    
    private final Connection con;
    String image_chargement = "";
    Image img;
    JPanel paner;
    ArrayList<Miniature> trouve = new ArrayList();
            
    /**
     * Creates new form Window
     */
    public Window(Connection con) {
        this.con = con;
        initComponents();
        this.setVisible(true);
        this.setTitle("Le monde des applications");
        jPanelAcceuil.setVisible(true);
        jPanelAffiche.setVisible(false);
        jPanelLogAdmin.setVisible(false);
        jPanelImageCompa.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanelLogAdmin = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldLogin = new javax.swing.JTextField();
        jButtonAdmin = new javax.swing.JButton();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxCategorie = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jButtonVCategorie = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxSysteme = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jButtonVSysteme = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jComboBoxRech = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldMotRech = new javax.swing.JTextField();
        jButtonLanceRechMot = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldThes = new javax.swing.JTextField();
        jComboBoxThes = new javax.swing.JComboBox();
        jButtonValiderThes = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jButtonLanceRechCompa = new javax.swing.JButton();
        jButtonParcourir = new javax.swing.JButton();
        jTextFieldRechImage = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanelImageCompa = new javax.swing.JPanel();
        jSlidercouleur = new javax.swing.JSlider();
        jSliderforme = new javax.swing.JSlider();
        jSlidertexture = new javax.swing.JSlider();
        jSliderlocalisation = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jButtonAfficheAdmin = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanelAcceuil = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelAffiche = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(230, 230, 230));
        jPanel1.setMinimumSize(new java.awt.Dimension(210, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(210, 700));
        jPanel1.setVerifyInputWhenFocusTarget(false);

        jPanelLogAdmin.setBackground(new java.awt.Color(230, 230, 230));
        jPanelLogAdmin.setPreferredSize(new java.awt.Dimension(189, 100));
        jPanelLogAdmin.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Login");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelLogAdmin.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelLogAdmin.add(jLabel4, gridBagConstraints);

        jTextFieldLogin.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldLogin.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldLogin.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanelLogAdmin.add(jTextFieldLogin, gridBagConstraints);

        jButtonAdmin.setText("Go");
        jButtonAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdminActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanelLogAdmin.add(jButtonAdmin, gridBagConstraints);

        jPasswordFieldPassword.setMaximumSize(new java.awt.Dimension(200, 28));
        jPasswordFieldPassword.setMinimumSize(new java.awt.Dimension(200, 28));
        jPasswordFieldPassword.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanelLogAdmin.add(jPasswordFieldPassword, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(230, 230, 230));
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 5, 0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0};
        jPanel2.setLayout(jPanel2Layout);

        jComboBoxCategorie.setMaximumSize(new java.awt.Dimension(200, 28));
        jComboBoxCategorie.setMinimumSize(new java.awt.Dimension(200, 28));
        jComboBoxCategorie.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel2.add(jComboBoxCategorie, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Recherche par cat√©gorie");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jButtonVCategorie.setText("Valider");
        jButtonVCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVCategorieActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanel2.add(jButtonVCategorie, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(230, 230, 230));
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0, 5, 0};
        jPanel3Layout.rowHeights = new int[] {0, 5, 0};
        jPanel3.setLayout(jPanel3Layout);

        jComboBoxSysteme.setMaximumSize(new java.awt.Dimension(200, 28));
        jComboBoxSysteme.setMinimumSize(new java.awt.Dimension(200, 28));
        jComboBoxSysteme.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        jPanel3.add(jComboBoxSysteme, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Recherche par syst√®me");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jLabel8, gridBagConstraints);

        jButtonVSysteme.setText("Valider");
        jButtonVSysteme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVSystemeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanel3.add(jButtonVSysteme, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(230, 230, 230));
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel4Layout.rowHeights = new int[] {0, 5, 0, 5, 0};
        jPanel4.setLayout(jPanel4Layout);

        jComboBoxRech.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Toutes les images", "Dans image", "Dans image (nom)", "Dans image (description)", "Dans application", "Dans application (nom)", "Dans application (description)" }));
        jComboBoxRech.setMaximumSize(new java.awt.Dimension(200, 28));
        jComboBoxRech.setMinimumSize(new java.awt.Dimension(200, 28));
        jComboBoxRech.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jComboBoxRech, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Recherche suivant un mot");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        jPanel4.add(jLabel1, gridBagConstraints);

        jTextFieldMotRech.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldMotRech.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldMotRech.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel4.add(jTextFieldMotRech, gridBagConstraints);

        jButtonLanceRechMot.setText("Valider");
        jButtonLanceRechMot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLanceRechMotActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jButtonLanceRechMot, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(230, 230, 230));
        java.awt.GridBagLayout jPanel5Layout = new java.awt.GridBagLayout();
        jPanel5Layout.columnWidths = new int[] {0, 5, 0};
        jPanel5Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel5.setLayout(jPanel5Layout);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("Recherche sur application");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel5.add(jLabel7, gridBagConstraints);

        jTextFieldThes.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldThes.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldThes.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel5.add(jTextFieldThes, gridBagConstraints);

        jComboBoxThes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BT", "NT", "RT", "SYN" }));
        jComboBoxThes.setMaximumSize(new java.awt.Dimension(200, 28));
        jComboBoxThes.setMinimumSize(new java.awt.Dimension(200, 28));
        jComboBoxThes.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel5.add(jComboBoxThes, gridBagConstraints);

        jButtonValiderThes.setText("Valider");
        jButtonValiderThes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderThesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel5.add(jButtonValiderThes, gridBagConstraints);

        jLabel9.setText("(Thesaurus)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel5.add(jLabel9, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(230, 230, 230));
        java.awt.GridBagLayout jPanel6Layout = new java.awt.GridBagLayout();
        jPanel6Layout.columnWidths = new int[] {0, 5, 0};
        jPanel6Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel6.setLayout(jPanel6Layout);

        jButtonLanceRechCompa.setText("Lancer");
        jButtonLanceRechCompa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLanceRechCompaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        jPanel6.add(jButtonLanceRechCompa, gridBagConstraints);

        jButtonParcourir.setText("Parcourir");
        jButtonParcourir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonParcourirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanel6.add(jButtonParcourir, gridBagConstraints);

        jTextFieldRechImage.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldRechImage.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldRechImage.setPreferredSize(new java.awt.Dimension(200, 28));
        jTextFieldRechImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRechImageActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        jPanel6.add(jTextFieldRechImage, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Recherche suivant une image");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        jPanelImageCompa.setPreferredSize(new java.awt.Dimension(200, 130));

        javax.swing.GroupLayout jPanelImageCompaLayout = new javax.swing.GroupLayout(jPanelImageCompa);
        jPanelImageCompa.setLayout(jPanelImageCompaLayout);
        jPanelImageCompaLayout.setHorizontalGroup(
            jPanelImageCompaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelImageCompaLayout.setVerticalGroup(
            jPanelImageCompaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        jPanel6.add(jPanelImageCompa, gridBagConstraints);

        jSlidercouleur.setValue(50);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel6.add(jSlidercouleur, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel6.add(jSliderforme, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel6.add(jSlidertexture, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        jPanel6.add(jSliderlocalisation, gridBagConstraints);

        jLabel10.setText("Couleur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel6.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Forme");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel6.add(jLabel11, gridBagConstraints);

        jLabel12.setText("Texture");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        jPanel6.add(jLabel12, gridBagConstraints);

        jLabel13.setText("Localisation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        jPanel6.add(jLabel13, gridBagConstraints);

        jButtonAfficheAdmin.setText("Administrateur");
        jButtonAfficheAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAfficheAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButtonAfficheAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelLogAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator5)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator4))
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAfficheAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelLogAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setLayout(new java.awt.CardLayout());

        jLabel5.setText("acceuil");

        javax.swing.GroupLayout jPanelAcceuilLayout = new javax.swing.GroupLayout(jPanelAcceuil);
        jPanelAcceuil.setLayout(jPanelAcceuilLayout);
        jPanelAcceuilLayout.setHorizontalGroup(
            jPanelAcceuilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAcceuilLayout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addComponent(jLabel5)
                .addContainerGap(382, Short.MAX_VALUE))
        );
        jPanelAcceuilLayout.setVerticalGroup(
            jPanelAcceuilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAcceuilLayout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jLabel5)
                .addContainerGap(476, Short.MAX_VALUE))
        );

        jPanel7.add(jPanelAcceuil, "card5");

        jPanelAffiche.setBorder(javax.swing.BorderFactory.createTitledBorder("R√©sultat de la recherche"));
        jPanelAffiche.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanelAfficheComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanelAfficheLayout = new javax.swing.GroupLayout(jPanelAffiche);
        jPanelAffiche.setLayout(jPanelAfficheLayout);
        jPanelAfficheLayout.setHorizontalGroup(
            jPanelAfficheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        jPanelAfficheLayout.setVerticalGroup(
            jPanelAfficheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 755, Short.MAX_VALUE)
        );

        jPanel7.add(jPanelAffiche, "card4");

        jMenu1.setText("File");

        jMenuItem1.setText("Acceuil");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Actualiser Index");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setText("Quitter");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void afficheImage(JPanel pan,Image img)
    {
        Graphics g=pan.getGraphics();
        g.drawImage(img, 0, 0, pan.getWidth(),pan.getHeight(),this);
    }
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        if(img!=null)
            afficheImage(paner,img);
    }                                                                                                                                                                                             

    void foncRecherche(String choix)
    {
        trouve = new ArrayList();        
        try
        {
            Statement s=con.createStatement();
            String mot = jTextFieldMotRech.getText();
            OracleResultSet rset;
            switch(choix)
            {
                case "Toutes les images" :
                    rset = (OracleResultSet)s.executeQuery("select miniature, idI, nomI from image");
                    while(rset.next())
                    {
                        OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                        int nume = rset.getInt(2);
                        String nome = rset.getString(3);
                        String num2 = Integer.toString(nume);
                        String url ;
                        if(minia.getContentLength() == 0) url = "rien.png";
                        else 
                        {
                            url = "miniature-"+num2+nome+".jpeg";
                            minia.getDataInFile(url);
                        }
                        Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                        trouve.add(mimimini);
                    }
                    rset.close();
                    break;
                case "Dans image" : 
                    if(!"".equals(mot))
                    {
                        rset = (OracleResultSet)s.executeQuery(
                            "select miniature, idI, nomI "
                                    + "from image "
                                    + "where contains (nomI,'!"+mot+"')>0 "
                                    + "or contains (descriptionI,'!"+mot+"')>0");
                        while(rset.next())
                        {
                            OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                            int nume = rset.getInt(2);
                            String nome = rset.getString(3);
                            String num2 = Integer.toString(nume);
                            String url ;
                            if(minia.getContentLength() == 0) url = "rien.png";
                            else 
                            {
                                url = "miniature-"+num2+nome+".jpeg";
                                minia.getDataInFile(url);
                            }
                            Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                            trouve.add(mimimini);
                        }
                        rset.close();
                    }
                    else
                    {
                        JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
                        jj.setBounds(20, 20, 500, 15);
                        jPanelAffiche.add(jj);
                    }
                    break;
                case "Dans image (nom)" : 
                    if(!"".equals(mot))
                    {
                        rset = (OracleResultSet)s.executeQuery(
                            "select miniature, idI, nomI "
                                    + "from image "
                                    + "where contains (nomI,'!"+mot+"')>0");
                        while(rset.next())
                        {
                            OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                            int nume = rset.getInt(2);
                            String nome = rset.getString(3);
                            String num2 = Integer.toString(nume);
                            String url ;
                            if(minia.getContentLength() == 0) url = "rien.png";
                            else 
                            {
                                url = "miniature-"+num2+nome+".jpeg";
                                minia.getDataInFile(url);
                            }
                            Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                            trouve.add(mimimini);
                        }
                        rset.close();
                    }
                    else
                    {
                        JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
                        jj.setBounds(20, 20, 500, 15);
                        jPanelAffiche.add(jj);
                    }
                    break;
                case "Dans image (description)" : 
                    if(!"".equals(mot))
                    {
                        rset = (OracleResultSet)s.executeQuery(
                            "select miniature, idI, nomI "
                                    + "from image "
                                    + "where contains (descriptionI,'!"+mot+"')>0");
                        while(rset.next())
                        {
                            OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                            int nume = rset.getInt(2);
                            String nome = rset.getString(3);
                            String num2 = Integer.toString(nume);
                            String url ;
                            if(minia.getContentLength() == 0) url = "rien.png";
                            else 
                            {
                                url = "miniature-"+num2+nome+".jpeg";
                                minia.getDataInFile(url);
                            }
                            Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                            trouve.add(mimimini);
                        }
                        rset.close();
                    }
                    else
                    {
                        JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
                        jj.setBounds(20, 20, 500, 15);
                        jPanelAffiche.add(jj);
                    }
                    break;
                case "Dans application" :
                    if(!"".equals(mot))
                    {
                        rset = (OracleResultSet)s.executeQuery(
                            "select a.idA "
                                    + "from application a "
                                    + "where contains (nomA,'!"+mot+"')>0 "
                                    + "or contains (descriptionA,'!"+mot+"')>0");
                        while(rset.next())
                        {
                            int numnum = rset.getInt(1);
                            OracleResultSet rset2 = (OracleResultSet)s.executeQuery(
                                "select miniature, idI, nomI "
                                        + "from image i "
                                        + "where i.applicationI.idA = "+numnum+" ");
                            while(rset2.next())
                            {
                                OrdImage minia = (OrdImage) rset2.getORAData(1,OrdImage.getORADataFactory());
                                int nume = rset2.getInt(2);
                                String nome = rset2.getString(3);
                                String num2 = Integer.toString(nume);
                                String url ;
                                if(minia.getContentLength() == 0) url = "rien.png";
                                else 
                                {
                                    url = "miniature-"+num2+nome+".jpeg";
                                    minia.getDataInFile(url);
                                }
                                Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                                trouve.add(mimimini);
                            }
                            rset2.close();
                        }
                        rset.close();
                    }
                    else
                    {
                        JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
                        jj.setBounds(20, 20, 500, 15);
                        jPanelAffiche.add(jj);
                    }
                    break;
                case "Dans application (nom)" :
                    if(!"".equals(mot))
                    {
                        rset = (OracleResultSet)s.executeQuery(
                            "select a.idA "
                                    + "from application a "
                                    + "where contains (nomA,'!"+mot+"')>0");
                        while(rset.next())
                        {
                            int numnum = rset.getInt(1);
                            OracleResultSet rset2 = (OracleResultSet)s.executeQuery(
                                "select miniature, idI, nomI "
                                        + "from image i "
                                        + "where i.applicationI.idA = "+numnum+" ");
                            while(rset2.next())
                            {
                                OrdImage minia = (OrdImage) rset2.getORAData(1,OrdImage.getORADataFactory());
                                int nume = rset2.getInt(2);
                                String nome = rset2.getString(3);
                                String num2 = Integer.toString(nume);
                                String url ;
                                if(minia.getContentLength() == 0) url = "rien.png";
                                else 
                                {
                                    url = "miniature-"+num2+nome+".jpeg";
                                    minia.getDataInFile(url);
                                }
                                Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                                trouve.add(mimimini);
                            }
                            rset2.close();
                        }
                        rset.close();
                    }
                    else
                    {
                        JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
                        jj.setBounds(20, 20, 500, 15);
                        jPanelAffiche.add(jj);
                    }
                    break;
                case "Dans application (description)" :
                    if(!"".equals(mot))
                    {
                        rset = (OracleResultSet)s.executeQuery(
                            "select a.idA "
                                    + "from application a "
                                    + "where contains (descriptionA,'!"+mot+"')>0");
                        while(rset.next())
                        {
                            int numnum = rset.getInt(1);
                            OracleResultSet rset2 = (OracleResultSet)s.executeQuery(
                                "select miniature, idI, nomI "
                                        + "from image i "
                                        + "where i.applicationI.idA = "+numnum+" ");
                            while(rset2.next())
                            {
                                OrdImage minia = (OrdImage) rset2.getORAData(1,OrdImage.getORADataFactory());
                                int nume = rset2.getInt(2);
                                String nome = rset2.getString(3);
                                String num2 = Integer.toString(nume);
                                String url ;
                                if(minia.getContentLength() == 0) url = "rien.png";
                                else 
                                {
                                    url = "miniature-"+num2+nome+".jpeg";
                                    minia.getDataInFile(url);
                                }
                                Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                                trouve.add(mimimini);
                            }
                            rset2.close();
                        }
                        rset.close();
                    }
                    else
                    {
                        JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
                        jj.setBounds(20, 20, 500, 15);
                        jPanelAffiche.add(jj);
                    }
                    break;
                default :
                    System.out.println("erreur combo box");
                    break;
            }
            s.close();
        }catch(Exception e){e.printStackTrace();}
        this.remplirPanelAffiche(trouve);
    }
    
    public void remplirPanelAffiche(ArrayList<Miniature> trouve)
    {
        jPanelAffiche.removeAll();
        jPanelAffiche.repaint();
        if(trouve.isEmpty())
        {
            JLabel jj = new JLabel("Pas de r√©sultat pour votre recherche");
            jj.setBounds(20, 20, 500, 15);
            jPanelAffiche.add(jj);
        }
        else
        {
        int abscisse = 20;
        int ordonne = 10;
        int largueur = jPanelAffiche.getSize().width;
        int cmp = 0;
        int cmpMax = largueur/150;
        for(Miniature mimi : trouve)
        {
            mimi.afficheMini(jPanelAffiche, ordonne, abscisse);
            cmp++;
            if(cmp<cmpMax)
            {
                ordonne += 150;
            }
            else
            {
                abscisse += 150;
                ordonne = 10;
                cmp = 0;
            }
        }
    }
    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jPanelAcceuil.setVisible(true);        
        jPanelAffiche.setVisible(false);
        jPanelImageCompa.setVisible(false);
        jLabel7.setText(" ");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jPanelAfficheComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAfficheComponentResized
        this.remplirPanelAffiche(trouve);
    }//GEN-LAST:event_jPanelAfficheComponentResized

    private void jButtonParcourirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonParcourirActionPerformed
        JFileChooser jf=new JFileChooser();
        int i=jf.showOpenDialog(this);
        if(i==JFileChooser.APPROVE_OPTION)
        {
            image_chargement=jf.getSelectedFile().getAbsolutePath();
        }
        jTextFieldRechImage.setText(image_chargement);
    }//GEN-LAST:event_jButtonParcourirActionPerformed

    private void jTextFieldRechImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRechImageActionPerformed

    }//GEN-LAST:event_jTextFieldRechImageActionPerformed

    private void jButtonAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdminActionPerformed
        WindowAdmin wa;
        String login = this.jTextFieldLogin.getText();
        String password = new String(this.jPasswordFieldPassword.getPassword());
        if (!ProjetBDM.uConnexion(login, password)) {
            System.out.println("Erreur login/mot de passe");
        } else {
            wa = new WindowAdmin(this.con);
            wa.setVisible(true);
        }
    }//GEN-LAST:event_jButtonAdminActionPerformed

    private void jButtonAfficheAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAfficheAdminActionPerformed
        if(jPanelLogAdmin.isVisible() == false) jPanelLogAdmin.setVisible(true);
        else jPanelLogAdmin.setVisible(false);
    }//GEN-LAST:event_jButtonAfficheAdminActionPerformed

    private void jButtonLanceRechCompaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLanceRechCompaActionPerformed
        jPanelAcceuil.setVisible(false);
        jPanelAffiche.setVisible(true);
        jPanelImageCompa.setVisible(true);
        image_chargement = jTextFieldRechImage.getText();
        double couleur = (double)jSlidercouleur.getValue()/100;
        double forme = (double)jSliderforme.getValue()/100;
        double localisation = (double)jSliderlocalisation.getValue()/100;
        double texture = (double)jSlidertexture.getValue()/100;
        img = jPanelImageCompa.getToolkit().getImage(image_chargement);
        paner = jPanelImageCompa;
        repaint();
    }//GEN-LAST:event_jButtonLanceRechCompaActionPerformed

    private void jButtonLanceRechMotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLanceRechMotActionPerformed
        jPanelAcceuil.setVisible(false);
        jPanelAffiche.setVisible(true);
        jPanelImageCompa.setVisible(false);
        jLabel7.setText(" ");
        trouve.clear();
        jPanelAffiche.removeAll();
        jPanelAffiche.repaint();
        String indic = (String)jComboBoxRech.getSelectedItem();
        this.foncRecherche(indic);
    }//GEN-LAST:event_jButtonLanceRechMotActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        //S√©lection des cat√©gories
        try {
            //S√©lection des cat√©gories
            PreparedStatement st;
            st = con.prepareStatement("select * from categorie");
            st.executeQuery();
            ResultSet rst = st.executeQuery();
            while (rst.next()) {
                this.jComboBoxCategorie.addItem(rst.getString(2));
            }
        }
        catch(Exception e) {System.out.println(e);}
        
        //S√©lection des syst√®mes
        try {
            //S√©lection des cat√©gories
            PreparedStatement st;
            st = con.prepareStatement("select * from systeme");
            st.executeQuery();
            ResultSet rst = st.executeQuery();
            while (rst.next()) {
                this.jComboBoxSysteme.addItem(rst.getString(1));
            }
        }
        catch(Exception e) {System.out.println(e);}
    }//GEN-LAST:event_formComponentShown

    private void jButtonVCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVCategorieActionPerformed
        jPanelAcceuil.setVisible(false);
        jPanelAffiche.setVisible(true);
        jPanelImageCompa.setVisible(false);
        jLabel7.setText(" ");
        trouve.clear();
        jPanelAffiche.removeAll();
        jPanelAffiche.repaint();
        PreparedStatement st;
        String idC = this.jComboBoxCategorie.getSelectedItem().toString();
        try {
            st = con.prepareStatement("select value(a) from application a "
                    + "where a.categorieA = (select ref(c) from categorie c where c.nomC = ?)");
            st.setString(1, idC);
            OracleResultSet rsetA = (OracleResultSet) st.executeQuery();
            while(rsetA.next()) {
                STRUCT str = (STRUCT) rsetA.getSTRUCT(1);
                Object[] tabAtt = str.getAttributes();

                Array arI = (Array) tabAtt[7];
                OracleResultSet rsetI = (OracleResultSet) arI.getResultSet();
                while (rsetI.next())
                {
                    STRUCT strI = rsetI.getSTRUCT(2);
                    Object[] tabAttI = strI.getAttributes();
                    REF refI = (REF) tabAttI[0];
                    STRUCT strI2 = refI.getSTRUCT();
                    Object[] tabI2 = strI2.getAttributes();
                    System.out.println(tabI2[0]);
                    st = con.prepareStatement("select miniature, idI, nomI from image where idI = " + tabI2[0]);
                    OracleResultSet rset = (OracleResultSet)st.executeQuery();
                    rset.next();
                    OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                    int nume = rset.getInt(2);
                    String nome = rset.getString(3);
                    String num2 = Integer.toString(nume);
                    String url ;
                    if(minia.getContentLength() == 0) url = "rien.png";
                    else 
                    {
                        url = "miniature-"+num2+nome+".jpeg";
                        try {
                            minia.getDataInFile(url);
                        } catch (IOException ex) {
                            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                    trouve.add(mimimini);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.remplirPanelAffiche(trouve);
    }//GEN-LAST:event_jButtonVCategorieActionPerformed

    private void jButtonValiderThesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderThesActionPerformed
        jPanelAcceuil.setVisible(false);
        jPanelAffiche.setVisible(true);
        jPanelImageCompa.setVisible(false);
        jLabel7.setText(" ");
        trouve.clear();
        jPanelAffiche.removeAll();
        jPanelAffiche.repaint();
        String mot = this.jTextFieldThes.getText();
        String rel = this.jComboBoxThes.getSelectedItem().toString();
        Thesaurus thes = new Thesaurus("app_thes");
        OracleResultSet rset1 = thes.rechercheThes(mot, rel);
        PreparedStatement st;
        try {
            while(rset1.next()) {
                STRUCT str = (STRUCT) rset1.getSTRUCT(1);
                Object[] tabAtt = str.getAttributes();
                
                Array arI = (Array) tabAtt[7];
                OracleResultSet rsetI = (OracleResultSet) arI.getResultSet();
                while (rsetI.next())
                {
                    STRUCT strI = rsetI.getSTRUCT(2);
                    Object[] tabAttI = strI.getAttributes();
                    REF refI = (REF) tabAttI[0];
                    STRUCT strI2 = refI.getSTRUCT();
                    Object[] tabI2 = strI2.getAttributes();
                    System.out.println(tabI2[0]);
                    st = con.prepareStatement("select miniature, idI, nomI from image where idI = " + tabI2[0]);
                    OracleResultSet rset = (OracleResultSet)st.executeQuery();
                    rset.next();
                    OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                    int nume = rset.getInt(2);
                    String nome = rset.getString(3);
                    String num2 = Integer.toString(nume);
                    String url ;
                    if(minia.getContentLength() == 0) url = "rien.png";
                    else
                    {
                        url = "miniature-"+num2+nome+".jpeg";
                        try {
                            minia.getDataInFile(url);
                        } catch (IOException ex) {
                            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                    trouve.add(mimimini);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.remplirPanelAffiche(trouve);
    }//GEN-LAST:event_jButtonValiderThesActionPerformed

    private void jButtonVSystemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVSystemeActionPerformed
        jPanelAcceuil.setVisible(false);
        jPanelAffiche.setVisible(true);
        jPanelImageCompa.setVisible(false);
        jLabel7.setText(" ");
        trouve.clear();
        jPanelAffiche.removeAll();
        jPanelAffiche.repaint();
        PreparedStatement st;
        String nomS = this.jComboBoxSysteme.getSelectedItem().toString();
        try {
            st = con.prepareStatement("select value(a) from applicationSysteme a where "
                    + "a.systemeA = (select ref(s) from systeme s where s.nomS = ?)");
            st.setString(1, nomS);
            OracleResultSet rset1 = (OracleResultSet) st.executeQuery();
            while (rset1.next())
            {
                STRUCT str1 = (STRUCT) rset1.getSTRUCT(1);
                Object[] tabAtt1 = str1.getAttributes();
                REF ref1 = (REF) tabAtt1[1];
                STRUCT str2 = ref1.getSTRUCT();
                Object[] tabAtt2 = str2.getAttributes();
                Array ar1 = (Array) tabAtt2[7];
                OracleResultSet rset2 = (OracleResultSet) ar1.getResultSet();
                while (rset2.next())
                {
                    STRUCT strI = rset2.getSTRUCT(2);
                    Object[] tabAtt3 = strI.getAttributes();
                    REF ref2 = (REF) tabAtt3[0];
                    STRUCT str3 = ref2.getSTRUCT();
                    Object[] tabAtt4 = str3.getAttributes();
                    System.out.println(tabAtt4[0]);
                    st = con.prepareStatement("select miniature, idI, nomI from image where idI = " + tabAtt4[0]);
                    OracleResultSet rset = (OracleResultSet)st.executeQuery();
                    rset.next();
                    OrdImage minia = (OrdImage) rset.getORAData(1,OrdImage.getORADataFactory());
                    int nume = rset.getInt(2);
                    String nome = rset.getString(3);
                    String num2 = Integer.toString(nume);
                    String url ;
                    if(minia.getContentLength() == 0) url = "rien.png";
                    else
                    {
                        url = "miniature-"+num2+nome+".jpeg";
                        try {
                            minia.getDataInFile(url);
                        } catch (IOException ex) {
                            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    Miniature mimimini = new Miniature(nume, url, nome, "image", con);
                    trouve.add(mimimini);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.remplirPanelAffiche(trouve);
    }//GEN-LAST:event_jButtonVSystemeActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        PreparedStatement st;
        try {
            st = con.prepareStatement("alter index nomIindex rebuild");
            st.execute();
            st = con.prepareStatement("alter index descriptionIindex rebuild");
            st.execute();
            st = con.prepareStatement("alter index nomAindex rebuild");
            st.execute();
            st = con.prepareStatement("alter index descriptionAindex rebuild");
            st.execute();
            con.commit();
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdmin;
    private javax.swing.JButton jButtonAfficheAdmin;
    private javax.swing.JButton jButtonLanceRechCompa;
    private javax.swing.JButton jButtonLanceRechMot;
    private javax.swing.JButton jButtonParcourir;
    private javax.swing.JButton jButtonVCategorie;
    private javax.swing.JButton jButtonVSysteme;
    private javax.swing.JButton jButtonValiderThes;
    private javax.swing.JComboBox jComboBoxCategorie;
    private javax.swing.JComboBox jComboBoxRech;
    private javax.swing.JComboBox jComboBoxSysteme;
    private javax.swing.JComboBox jComboBoxThes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelAcceuil;
    private javax.swing.JPanel jPanelAffiche;
    private javax.swing.JPanel jPanelImageCompa;
    private javax.swing.JPanel jPanelLogAdmin;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSlider jSlidercouleur;
    private javax.swing.JSlider jSliderforme;
    private javax.swing.JSlider jSliderlocalisation;
    private javax.swing.JSlider jSlidertexture;
    private javax.swing.JTextField jTextFieldLogin;
    private javax.swing.JTextField jTextFieldMotRech;
    private javax.swing.JTextField jTextFieldRechImage;
    private javax.swing.JTextField jTextFieldThes;
    // End of variables declaration//GEN-END:variables
}
