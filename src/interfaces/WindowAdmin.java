/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import java.sql.*;
import java.text.DateFormat;
import static java.text.DateFormat.MEDIUM;
import static java.text.DateFormat.SHORT;
import static java.util.Locale.FRANCE;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.*;
import oracle.sql.*;
import projetbdm.*;


/**
 *
 * @author cmolin
 */
public class WindowAdmin extends javax.swing.JFrame {
    
    private Connection con;

    public WindowAdmin(Connection con) {
        this.con = con;
        initComponents();
        this.setVisible(true);
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPaneImage = new javax.swing.JTabbedPane();
        jPanelSysteme = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButtonAddSysteme = new javax.swing.JButton();
        jButtonDeleteSysteme = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanelAddSysteme = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldFabriquantS = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldNomS = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldVersionA = new javax.swing.JTextField();
        jButtonAnnulerS = new javax.swing.JButton();
        jButtonSaveSysteme = new javax.swing.JButton();
        jPanelUtilisateur = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButtonAddUtilisateur = new javax.swing.JButton();
        jButtonDeleteUtilisateur = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanelAddUtilisateur = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldLogin = new javax.swing.JTextField();
        jPasswordFieldPass = new javax.swing.JPasswordField();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonSaveUtilisateur = new javax.swing.JButton();
        jPanelImage = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jToggleButtonAddImage = new javax.swing.JToggleButton();
        jButtonSupprimerImage = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPaneImage = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanelAddImage = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNomI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescriptionI = new javax.swing.JTextArea();
        jButtonAnnulerImage = new javax.swing.JButton();
        jButtonSaveImage = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldUrlI = new javax.swing.JTextField();
        jButtonParcourirI = new javax.swing.JButton();
        jDateChooserImage = new com.toedter.calendar.JDateChooser();
        jPanelCategorie = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButtonAddCategorie = new javax.swing.JButton();
        jButtonDeleteCategorie = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanelAddCategorie = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNomC = new javax.swing.JTextField();
        jButtonAnnulerC = new javax.swing.JButton();
        jButtonSaveC = new javax.swing.JButton();
        jPanelApplication = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButtonAddApplication = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanelAddApplication = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldNomA = new javax.swing.JTextField();
        jTextFieldTailleA = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaDescA = new javax.swing.JTextArea();
        jTextFieldVersionAA = new javax.swing.JTextField();
        jButtonAnnulerA = new javax.swing.JButton();
        jButtonSuivantA1 = new javax.swing.JButton();
        jDateChooserApplication = new com.toedter.calendar.JDateChooser();
        jPanelAddApplication3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jButtonSuivantA3 = new javax.swing.JButton();
        jButtonAnnulerA3 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jPanelAddApplication2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButtonSuivantA2 = new javax.swing.JButton();
        jButtonAnnulerA2 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jPanelAddApplication4 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jButtonSaveApplication = new javax.swing.JButton();
        jButtonAnnulerA4 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administration application");
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        jTabbedPaneImage.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanelSysteme.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelSystemeComponentShown(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButtonAddSysteme.setText("Ajouter un système");
        jButtonAddSysteme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSystemeActionPerformed(evt);
            }
        });
        jPanel5.add(jButtonAddSysteme, new java.awt.GridBagConstraints());

        jButtonDeleteSysteme.setText("Supprimer");
        jButtonDeleteSysteme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSystemeActionPerformed(evt);
            }
        });
        jPanel5.add(jButtonDeleteSysteme, new java.awt.GridBagConstraints());

        jPanel7.setLayout(new java.awt.CardLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Nom système", "Fabriquant", "Version"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel7.add(jScrollPane3, "card2");

        jPanelAddSysteme.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter un système"));
        java.awt.GridBagLayout jPanel8Layout = new java.awt.GridBagLayout();
        jPanel8Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel8Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanelAddSysteme.setLayout(jPanel8Layout);

        jLabel8.setText("Nom du système : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddSysteme.add(jLabel8, gridBagConstraints);

        jTextFieldFabriquantS.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldFabriquantS.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldFabriquantS.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        jPanelAddSysteme.add(jTextFieldFabriquantS, gridBagConstraints);

        jLabel9.setText("Fabriquants : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddSysteme.add(jLabel9, gridBagConstraints);

        jTextFieldNomS.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomS.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomS.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        jPanelAddSysteme.add(jTextFieldNomS, gridBagConstraints);

        jLabel10.setText("Version actuelle : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddSysteme.add(jLabel10, gridBagConstraints);

        jTextFieldVersionA.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldVersionA.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldVersionA.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        jPanelAddSysteme.add(jTextFieldVersionA, gridBagConstraints);

        jButtonAnnulerS.setText("Annuler");
        jButtonAnnulerS.setToolTipText("");
        jButtonAnnulerS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanelAddSysteme.add(jButtonAnnulerS, gridBagConstraints);

        jButtonSaveSysteme.setText("Sauvegarder");
        jButtonSaveSysteme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveSystemeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanelAddSysteme.add(jButtonSaveSysteme, gridBagConstraints);

        jPanel7.add(jPanelAddSysteme, "card3");

        org.jdesktop.layout.GroupLayout jPanelSystemeLayout = new org.jdesktop.layout.GroupLayout(jPanelSysteme);
        jPanelSysteme.setLayout(jPanelSystemeLayout);
        jPanelSystemeLayout.setHorizontalGroup(
            jPanelSystemeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
        );
        jPanelSystemeLayout.setVerticalGroup(
            jPanelSystemeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelSystemeLayout.createSequentialGroup()
                .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneImage.addTab("Système", jPanelSysteme);

        jPanelUtilisateur.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelUtilisateurComponentShown(evt);
            }
        });
        jPanelUtilisateur.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelUtilisateurFocusGained(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonAddUtilisateur.setText("Ajouter un utilisateur");
        jButtonAddUtilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUtilisateurActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonAddUtilisateur, new java.awt.GridBagConstraints());

        jButtonDeleteUtilisateur.setText("Supprimer");
        jButtonDeleteUtilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteUtilisateurActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonDeleteUtilisateur, new java.awt.GridBagConstraints());

        jPanel6.setLayout(new java.awt.CardLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Login"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel6.add(jScrollPane2, "card2");

        java.awt.GridBagLayout jPanelAddUtilisateurLayout = new java.awt.GridBagLayout();
        jPanelAddUtilisateurLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanelAddUtilisateurLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanelAddUtilisateur.setLayout(jPanelAddUtilisateurLayout);

        jLabel5.setText("Nom d'utilisateur : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanelAddUtilisateur.add(jLabel5, gridBagConstraints);

        jLabel7.setText("Mot de passe : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanelAddUtilisateur.add(jLabel7, gridBagConstraints);

        jTextFieldLogin.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldLogin.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldLogin.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelAddUtilisateur.add(jTextFieldLogin, gridBagConstraints);

        jPasswordFieldPass.setMaximumSize(new java.awt.Dimension(200, 28));
        jPasswordFieldPass.setMinimumSize(new java.awt.Dimension(200, 28));
        jPasswordFieldPass.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelAddUtilisateur.add(jPasswordFieldPass, gridBagConstraints);

        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 1, 0);
        jPanelAddUtilisateur.add(jButtonAnnuler, gridBagConstraints);

        jButtonSaveUtilisateur.setText("Sauvegarder");
        jButtonSaveUtilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveUtilisateurActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanelAddUtilisateur.add(jButtonSaveUtilisateur, gridBagConstraints);

        jPanel6.add(jPanelAddUtilisateur, "card3");

        org.jdesktop.layout.GroupLayout jPanelUtilisateurLayout = new org.jdesktop.layout.GroupLayout(jPanelUtilisateur);
        jPanelUtilisateur.setLayout(jPanelUtilisateurLayout);
        jPanelUtilisateurLayout.setHorizontalGroup(
            jPanelUtilisateurLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
        );
        jPanelUtilisateurLayout.setVerticalGroup(
            jPanelUtilisateurLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelUtilisateurLayout.createSequentialGroup()
                .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneImage.addTab("Utilisateur", jPanelUtilisateur);

        jPanelImage.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelImageComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jToggleButtonAddImage.setText("Ajouter une image");
        jToggleButtonAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonAddImageActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButtonAddImage, new java.awt.GridBagConstraints());

        jButtonSupprimerImage.setText("Supprimer");
        jButtonSupprimerImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerImageActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSupprimerImage, new java.awt.GridBagConstraints());

        jPanel2.setLayout(new java.awt.CardLayout());

        jScrollPaneImage.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jScrollPaneImageComponentShown(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Identifiant", "Nom", "Description", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneImage.setViewportView(jTable1);

        jPanel2.add(jScrollPaneImage, "card2");

        jPanelAddImage.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une image"));
        java.awt.GridBagLayout jPanelAddImageLayout = new java.awt.GridBagLayout();
        jPanelAddImageLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanelAddImageLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanelAddImage.setLayout(jPanelAddImageLayout);

        jLabel1.setText("Nom image : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddImage.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Date : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddImage.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Description : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddImage.add(jLabel3, gridBagConstraints);

        jTextFieldNomI.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomI.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomI.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanelAddImage.add(jTextFieldNomI, gridBagConstraints);

        jTextAreaDescriptionI.setColumns(20);
        jTextAreaDescriptionI.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDescriptionI);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelAddImage.add(jScrollPane1, gridBagConstraints);

        jButtonAnnulerImage.setText("Annuler");
        jButtonAnnulerImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerImageActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        jPanelAddImage.add(jButtonAnnulerImage, gridBagConstraints);

        jButtonSaveImage.setText("Sauvegarder");
        jButtonSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveImageActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanelAddImage.add(jButtonSaveImage, gridBagConstraints);

        jLabel4.setText("Image : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelAddImage.add(jLabel4, gridBagConstraints);

        jTextFieldUrlI.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldUrlI.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldUrlI.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        jPanelAddImage.add(jTextFieldUrlI, gridBagConstraints);

        jButtonParcourirI.setText("Parcourir");
        jButtonParcourirI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonParcourirIActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelAddImage.add(jButtonParcourirI, gridBagConstraints);

        jDateChooserImage.setDateFormatString("d/MM/YYYY");
        jDateChooserImage.setMaximumSize(new java.awt.Dimension(150, 28));
        jDateChooserImage.setMinimumSize(new java.awt.Dimension(150, 28));
        jDateChooserImage.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        jPanelAddImage.add(jDateChooserImage, gridBagConstraints);

        jPanel2.add(jPanelAddImage, "card3");

        org.jdesktop.layout.GroupLayout jPanelImageLayout = new org.jdesktop.layout.GroupLayout(jPanelImage);
        jPanelImage.setLayout(jPanelImageLayout);
        jPanelImageLayout.setHorizontalGroup(
            jPanelImageLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
        );
        jPanelImageLayout.setVerticalGroup(
            jPanelImageLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelImageLayout.createSequentialGroup()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneImage.addTab("Image", jPanelImage);

        jPanelCategorie.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelCategorieComponentShown(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButtonAddCategorie.setText("Ajouter une catégorie");
        jButtonAddCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCategorieActionPerformed(evt);
            }
        });
        jPanel8.add(jButtonAddCategorie, new java.awt.GridBagConstraints());

        jButtonDeleteCategorie.setText("Supprimer");
        jButtonDeleteCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCategorieActionPerformed(evt);
            }
        });
        jPanel8.add(jButtonDeleteCategorie, new java.awt.GridBagConstraints());

        jPanel9.setLayout(new java.awt.CardLayout());

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Identifiant", "Nom catégorie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel9.add(jScrollPane4, "card2");

        jPanelAddCategorie.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une catégorie"));
        jPanelAddCategorie.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Nom de la catégorie : ");
        jPanelAddCategorie.add(jLabel6, new java.awt.GridBagConstraints());

        jTextFieldNomC.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomC.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomC.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanelAddCategorie.add(jTextFieldNomC, gridBagConstraints);

        jButtonAnnulerC.setText("Annuler");
        jButtonAnnulerC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanelAddCategorie.add(jButtonAnnulerC, gridBagConstraints);

        jButtonSaveC.setText("Sauvegarder");
        jButtonSaveC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanelAddCategorie.add(jButtonSaveC, gridBagConstraints);

        jPanel9.add(jPanelAddCategorie, "card3");

        org.jdesktop.layout.GroupLayout jPanelCategorieLayout = new org.jdesktop.layout.GroupLayout(jPanelCategorie);
        jPanelCategorie.setLayout(jPanelCategorieLayout);
        jPanelCategorieLayout.setHorizontalGroup(
            jPanelCategorieLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelCategorieLayout.setVerticalGroup(
            jPanelCategorieLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelCategorieLayout.createSequentialGroup()
                .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneImage.addTab("Catégorie", jPanelCategorie);

        jPanelApplication.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelApplicationComponentShown(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButtonAddApplication.setText("Ajouter une application");
        jButtonAddApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddApplicationActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonAddApplication, new java.awt.GridBagConstraints());

        jButton2.setText("Supprimer");
        jPanel4.add(jButton2, new java.awt.GridBagConstraints());

        jPanel10.setLayout(new java.awt.CardLayout());

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Identifiant", "Nom", "Description", "Date création", "Taille", "Version actuelle"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jPanel10.add(jScrollPane5, "card2");

        jPanelAddApplication.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une application 1/4"));
        java.awt.GridBagLayout jPanel11Layout = new java.awt.GridBagLayout();
        jPanel11Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel11Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanelAddApplication.setLayout(jPanel11Layout);

        jLabel11.setText("Nom application : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanelAddApplication.add(jLabel11, gridBagConstraints);

        jLabel12.setText("Description application : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanelAddApplication.add(jLabel12, gridBagConstraints);

        jLabel13.setText("Date de création : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanelAddApplication.add(jLabel13, gridBagConstraints);

        jLabel14.setText("Taille(en MO) : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanelAddApplication.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Version actuelle : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanelAddApplication.add(jLabel15, gridBagConstraints);

        jTextFieldNomA.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomA.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldNomA.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanelAddApplication.add(jTextFieldNomA, gridBagConstraints);

        jTextFieldTailleA.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldTailleA.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldTailleA.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanelAddApplication.add(jTextFieldTailleA, gridBagConstraints);

        jTextAreaDescA.setColumns(20);
        jTextAreaDescA.setRows(5);
        jScrollPane6.setViewportView(jTextAreaDescA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelAddApplication.add(jScrollPane6, gridBagConstraints);

        jTextFieldVersionAA.setMaximumSize(new java.awt.Dimension(200, 28));
        jTextFieldVersionAA.setMinimumSize(new java.awt.Dimension(200, 28));
        jTextFieldVersionAA.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        jPanelAddApplication.add(jTextFieldVersionAA, gridBagConstraints);

        jButtonAnnulerA.setText("Annuler");
        jButtonAnnulerA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerAActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        jPanelAddApplication.add(jButtonAnnulerA, gridBagConstraints);

        jButtonSuivantA1.setText("Suivant");
        jButtonSuivantA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuivantA1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(19, 0, 0, 0);
        jPanelAddApplication.add(jButtonSuivantA1, gridBagConstraints);

        jDateChooserApplication.setDateFormatString("d/MM/YYYY");
        jDateChooserApplication.setMaximumSize(new java.awt.Dimension(200, 28));
        jDateChooserApplication.setMinimumSize(new java.awt.Dimension(200, 28));
        jDateChooserApplication.setPreferredSize(new java.awt.Dimension(200, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanelAddApplication.add(jDateChooserApplication, gridBagConstraints);

        jPanel10.add(jPanelAddApplication, "card3");

        jPanelAddApplication3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une application 3/4"));
        jPanelAddApplication3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelAddApplication3ComponentShown(evt);
            }
        });

        jPanel13.setBorder(null);
        java.awt.GridBagLayout jPanel13Layout = new java.awt.GridBagLayout();
        jPanel13Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel13Layout.rowHeights = new int[] {0, 5, 0};
        jPanel13.setLayout(jPanel13Layout);

        jButtonSuivantA3.setText("Suivant");
        jButtonSuivantA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuivantA3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel13.add(jButtonSuivantA3, gridBagConstraints);

        jButtonAnnulerA3.setText("Annuler");
        jButtonAnnulerA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerA3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel13.add(jButtonAnnulerA3, gridBagConstraints);

        jPanel14.setLayout(new java.awt.CardLayout());

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Identifiant", "Nom ", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTable7);

        jPanel14.add(jScrollPane8, "card2");

        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel20.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel20.setText("Sélectionner les images de l'application");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel19.add(jLabel20, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanelAddApplication3Layout = new org.jdesktop.layout.GroupLayout(jPanelAddApplication3);
        jPanelAddApplication3.setLayout(jPanelAddApplication3Layout);
        jPanelAddApplication3Layout.setHorizontalGroup(
            jPanelAddApplication3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel14, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .add(jPanel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelAddApplication3Layout.setVerticalGroup(
            jPanelAddApplication3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelAddApplication3Layout.createSequentialGroup()
                .add(jPanel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel14, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel10.add(jPanelAddApplication3, "card5");

        jPanelAddApplication2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une application 2/4"));
        jPanelAddApplication2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelAddApplication2ComponentShown(evt);
            }
        });

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jButtonSuivantA2.setText("Suivant");
        jButtonSuivantA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuivantA2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanel11.add(jButtonSuivantA2, gridBagConstraints);

        jButtonAnnulerA2.setText("Annuler");
        jButtonAnnulerA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerA2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        jPanel11.add(jButtonAnnulerA2, gridBagConstraints);

        jPanel12.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel12ComponentShown(evt);
            }
        });
        jPanel12.setLayout(new java.awt.CardLayout());

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Identifiant", "Nom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable6);

        jPanel12.add(jScrollPane7, "card2");

        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel18.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(77, 77, 77));
        jLabel18.setText("Sélectionner au moins une catégorie pour l'application");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel17.add(jLabel18, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanelAddApplication2Layout = new org.jdesktop.layout.GroupLayout(jPanelAddApplication2);
        jPanelAddApplication2.setLayout(jPanelAddApplication2Layout);
        jPanelAddApplication2Layout.setHorizontalGroup(
            jPanelAddApplication2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .add(jPanel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelAddApplication2Layout.setVerticalGroup(
            jPanelAddApplication2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelAddApplication2Layout.createSequentialGroup()
                .add(jPanel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel10.add(jPanelAddApplication2, "card4");

        jPanelAddApplication4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une application 4/4"));
        jPanelAddApplication4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelAddApplication4ComponentShown(evt);
            }
        });

        java.awt.GridBagLayout jPanel15Layout = new java.awt.GridBagLayout();
        jPanel15Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel15Layout.rowHeights = new int[] {0, 5, 0};
        jPanel15.setLayout(jPanel15Layout);

        jButtonSaveApplication.setText("Sauvegarder");
        jButtonSaveApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveApplicationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel15.add(jButtonSaveApplication, gridBagConstraints);

        jButtonAnnulerA4.setText("Annuler");
        jButtonAnnulerA4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerA4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel15.add(jButtonAnnulerA4, gridBagConstraints);

        jPanel16.setLayout(new java.awt.CardLayout());

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sélection", "Nom", "Nom fabriquant", "Version"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTable8);

        jPanel16.add(jScrollPane9, "card2");

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel16.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel16.setText("Sélectionner au moins un système d'exploitation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel18.add(jLabel16, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanelAddApplication4Layout = new org.jdesktop.layout.GroupLayout(jPanelAddApplication4);
        jPanelAddApplication4.setLayout(jPanelAddApplication4Layout);
        jPanelAddApplication4Layout.setHorizontalGroup(
            jPanelAddApplication4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel16, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .add(jPanel18, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelAddApplication4Layout.setVerticalGroup(
            jPanelAddApplication4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelAddApplication4Layout.createSequentialGroup()
                .add(jPanel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 411, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel10.add(jPanelAddApplication4, "card3");

        org.jdesktop.layout.GroupLayout jPanelApplicationLayout = new org.jdesktop.layout.GroupLayout(jPanelApplication);
        jPanelApplication.setLayout(jPanelApplicationLayout);
        jPanelApplicationLayout.setHorizontalGroup(
            jPanelApplicationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .add(jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelApplicationLayout.setVerticalGroup(
            jPanelApplicationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelApplicationLayout.createSequentialGroup()
                .add(jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneImage.addTab("Application", jPanelApplication);

        getContentPane().add(jTabbedPaneImage);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelUtilisateurFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelUtilisateurFocusGained

    }//GEN-LAST:event_jPanelUtilisateurFocusGained

    private void jPanelUtilisateurComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelUtilisateurComponentShown
        this.upadteTableUtilisateur();
    }//GEN-LAST:event_jPanelUtilisateurComponentShown

    public void upadteTableUtilisateur()
    {
        Utilisateur u = new Utilisateur();
        try {
            java.util.Map maMap = con.getTypeMap();
            maMap.put("CM429363.UTILISATEUR_TYPE", Class.forName("projetbdm.Utilisateur"));
            PreparedStatement st = con.prepareStatement("select value(u) from utilisateur u");
            ResultSet rst = st.executeQuery();
            DefaultTableModel model = (DefaultTableModel) this.jTable2.getModel();
            model.getDataVector().removeAllElements();
            while (rst.next()) {
                u = (Utilisateur) rst.getObject(1, maMap);
                model.addRow(new Object[]{false, u.login});
            }
        }
        catch(SQLException | ClassNotFoundException e) {
            System.out.println(e);
        }
    }
    
    private void jToggleButtonAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonAddImageActionPerformed
        this.jScrollPaneImage.setVisible(false);
        this.jPanelAddImage.setVisible(true);
    }//GEN-LAST:event_jToggleButtonAddImageActionPerformed

    private void jButtonAnnulerImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerImageActionPerformed
        this.jPanelAddImage.setVisible(false);
        this.jScrollPaneImage.setVisible(true);
        this.resetFormImage();
    }//GEN-LAST:event_jButtonAnnulerImageActionPerformed

    private void resetFormImage()
    {
        this.jTextFieldNomI.setText("");
        this.jTextAreaDescriptionI.setText("");
        this.jTextFieldUrlI.setText("");
        this.jDateChooserImage.setDate(null);
    }
    
    private void jButtonSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveImageActionPerformed
        String nom = this.jTextFieldNomI.getText();
        DateFormat fmt = DateFormat.getDateInstance(SHORT, FRANCE);
        String description = this.jTextAreaDescriptionI.getText();
        String urlI = this.jTextFieldUrlI.getText();
        
        if (!nom.isEmpty())
            try {
                String date = fmt.format(this.jDateChooserImage.getDate());
                if (!description.isEmpty())
                    if (!urlI.isEmpty()) {
                        Image img = new Image();
                        img.insererImage(nom, date, description, urlI);
                        this.jPanelAddImage.setVisible(false);
                        this.jScrollPaneImage.setVisible(true);
                        this.resetFormImage();
                    }
                    else JOptionPane.showMessageDialog(this, "Remplir le champ image");
                else JOptionPane.showMessageDialog(this, "Remplir le champ description");
            } catch(Exception e) { JOptionPane.showMessageDialog(this, "Date non valide"); }
        else JOptionPane.showMessageDialog(this, "Remplir le champ nom image");
    }//GEN-LAST:event_jButtonSaveImageActionPerformed

    private void jButtonParcourirIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonParcourirIActionPerformed
        String image_chargement = "";
        JFileChooser jf=new JFileChooser();
        int i=jf.showOpenDialog(this);
        if(i==JFileChooser.APPROVE_OPTION)
        {
            image_chargement = jf.getSelectedFile().getAbsolutePath();
        }
        this.jTextFieldUrlI.setText(image_chargement);
    }//GEN-LAST:event_jButtonParcourirIActionPerformed

    private void jScrollPaneImageComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jScrollPaneImageComponentShown

    }//GEN-LAST:event_jScrollPaneImageComponentShown

    private void jPanelImageComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelImageComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        String sql = "select * from image";
        this.initTabImage(sql, model);
    }//GEN-LAST:event_jPanelImageComponentShown

    /**
     * Permet d'initialiser la jTable image 
     * @param sql
     * @param model 
     */
    private void initTabImage(String sql, DefaultTableModel model)
    {
        PreparedStatement st;
        try {
            st = con.prepareStatement(sql);
            ResultSet rst = st.executeQuery();
            model.getDataVector().removeAllElements();
            while (rst.next()) {
                int idA = rst.getInt(1);
                String nom = rst.getString(3);
                String date = rst.getString(2);
                String description = rst.getString(4);
                model.addRow(new Object[]{false, idA, nom, description, date});
            }
        } catch (SQLException ex) {
            Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButtonAddUtilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUtilisateurActionPerformed
        this.jScrollPane2.setVisible(false);
        this.jPanelAddUtilisateur.setVisible(true);
    }//GEN-LAST:event_jButtonAddUtilisateurActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        this.jScrollPane2.setVisible(true);
        this.jPanelAddUtilisateur.setVisible(false);
        this.resetFormUtilisateur();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonSaveUtilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveUtilisateurActionPerformed
        String login = this.jTextFieldLogin.getText();
        String password = new String(this.jPasswordFieldPass.getPassword());
        
        if (!login.isEmpty())
            if (!password.isEmpty()) {
                try {
                    Utilisateur u = new Utilisateur();
                    u.login = login;
                    u.password = password;
                    java.util.Map maMap = con.getTypeMap();
                    PreparedStatement st = con.prepareStatement("insert into utilisateur "
                            + "values(?)");
                    st.setObject(1, u);
                    st.executeUpdate();
                    con.commit();
                    st.close();
                    this.jPanelAddUtilisateur.setVisible(false);
                    this.jScrollPane2.setVisible(true);
                    this.resetFormUtilisateur();
                }
                catch(Exception e) {System.out.println(e);}
            }
            else JOptionPane.showMessageDialog(this, "Remplir le champ mot de passe");
        else JOptionPane.showMessageDialog(this, "Remplir le champ login");
        this.upadteTableUtilisateur();
    }//GEN-LAST:event_jButtonSaveUtilisateurActionPerformed

    private void resetFormUtilisateur()
    {
        this.jTextFieldLogin.setText("");
        this.jPasswordFieldPass.setText("");
    }
    
    private void jButtonAddSystemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSystemeActionPerformed
        this.jScrollPane3.setVisible(false);
        this.jPanelAddSysteme.setVisible(true);
    }//GEN-LAST:event_jButtonAddSystemeActionPerformed

    private void jButtonAnnulerSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerSActionPerformed
        this.jScrollPane3.setVisible(true);
        this.jPanelAddSysteme.setVisible(false);
        this.resetFormSysteme();
    }//GEN-LAST:event_jButtonAnnulerSActionPerformed

    private void jButtonSaveSystemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveSystemeActionPerformed
        String nomS = this.jTextFieldNomS.getText();
        String fabriquantS = this.jTextFieldFabriquantS.getText();
        String versionA = this.jTextFieldVersionA.getText();
        
        if (!nomS.isEmpty())
            if (!fabriquantS.isEmpty())
                if (!versionA.isEmpty()) {
                    try {
                        float versionA2 = Float.parseFloat(versionA);
                        try {
                            Systeme s = new Systeme();
                            s.nomS = nomS;
                            s.fabriquantS = fabriquantS;
                            s.versionA = versionA2;
                            PreparedStatement st = con.prepareStatement("insert into systeme "
                                    + "values(?)");
                            st.setObject(1, s);
                            st.executeUpdate();
                            con.commit();
                            st.close();
                            this.jPanelAddSysteme.setVisible(false);
                            this.jScrollPane3.setVisible(true);
                            this.resetFormSysteme();
                        }
                        catch(Exception e) {System.out.println(e);}
                    }
                    catch(NumberFormatException nfe){JOptionPane.showMessageDialog(this, "Format version non valide");}
                }
                else JOptionPane.showMessageDialog(this, "Remplir le champ version");
            else JOptionPane.showMessageDialog(this, "Remplir le champ fabriquant");
        else JOptionPane.showMessageDialog(this, "Remplir le champ nom");
        
        DefaultTableModel model = (DefaultTableModel) this.jTable3.getModel();
        this.initTabSysteme(model);
    }//GEN-LAST:event_jButtonSaveSystemeActionPerformed

    private void resetFormSysteme()
    {
        this.jTextFieldNomS.setText("");
        this.jTextFieldFabriquantS.setText("");
        this.jTextFieldVersionA.setText("");
    }
    
    private void jPanelSystemeComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSystemeComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable3.getModel();
        this.initTabSysteme(model);
    }//GEN-LAST:event_jPanelSystemeComponentShown

    /**
     * Initialise la jTable Systeme
     * @param model 
     */
    private void initTabSysteme(DefaultTableModel model)
    {
        Systeme s = new Systeme();
        try {
            java.util.Map maMap = con.getTypeMap();
            maMap.put("CM429363.SYSTEME_TYPE", Class.forName("projetbdm.Systeme"));
            PreparedStatement st = con.prepareStatement("select value(s) from systeme s");
            ResultSet rst = st.executeQuery();
            
            model.getDataVector().removeAllElements();
            while (rst.next()) {
                s = (Systeme) rst.getObject(1, maMap);
                model.addRow(new Object[]{false, s.nomS, s.fabriquantS, s.versionA});
            }
        }
        catch(SQLException | ClassNotFoundException e) {
            System.out.println(e);
        }
    }
    
    private void jButtonAddCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCategorieActionPerformed
        this.jScrollPane4.setVisible(false);
        this.jPanelAddCategorie.setVisible(true);
    }//GEN-LAST:event_jButtonAddCategorieActionPerformed

    private void jButtonAnnulerCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerCActionPerformed
        this.jScrollPane4.setVisible(true);
        this.jPanelAddCategorie.setVisible(false);
    }//GEN-LAST:event_jButtonAnnulerCActionPerformed

    private void jButtonSaveCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveCActionPerformed
        String nomC = this.jTextFieldNomC.getText();
        if (nomC.length() >= 3)
        {
            String sql = "insert into categorie values (numC.nextval,'" + nomC + "', applications_type())";
            try {
                Statement stmt = this.con.createStatement();
                stmt.executeQuery(sql);
                con.commit();
                stmt.close();
                this.jScrollPane4.setVisible(true);
                this.jPanelAddCategorie.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(Image.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Nom de la catégorie trop court");
        }
    }//GEN-LAST:event_jButtonSaveCActionPerformed

    private void jPanelCategorieComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelCategorieComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable4.getModel();
        this.initTabCategorie(model);
    }//GEN-LAST:event_jPanelCategorieComponentShown

    private void initTabCategorie(DefaultTableModel model)
    {
        PreparedStatement st;
        try {
            st = con.prepareStatement("select * from categorie");
            ResultSet rst = st.executeQuery();
            model.getDataVector().removeAllElements();
            while (rst.next()) {
                String nomC = rst.getString(2);
                int idC = rst.getInt(1);
                model.addRow(new Object[]{false, idC, nomC});
            }
        } catch (SQLException ex) {
            Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Supprimer les catégories
     * @param evt 
     */
    private void jButtonDeleteCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCategorieActionPerformed
        Boolean select = false;
        for (int i = 0; i < this.jTable4.getRowCount(); i++)
        {
            if (this.jTable4.getValueAt(i, 0).equals(true)){
                select = true;
                int idC = Integer.parseInt(this.jTable4.getValueAt(i, 1).toString());
                PreparedStatement st;
                try {
                    st = con.prepareStatement("select value(c) from categorie c "
                            + "where c.idC = ?");
                    st.setInt(1, idC);
                    OracleResultSet rset = (OracleResultSet) st.executeQuery();
                    rset.next();
                    STRUCT stt = (STRUCT) rset.getSTRUCT(1);
                    Object[] tabAtt = stt.getAttributes();
                    Array ar = (Array) tabAtt[2];
                    OracleResultSet rset2 = (OracleResultSet) ar.getResultSet();
                    if (!rset2.next()){
                        st = con.prepareStatement("delete categorie where idC = ?");
                        st.setInt(1, idC);
                        st.execute();
                        con.commit();
                        st.close();
                    }
                    else JOptionPane.showMessageDialog(this, "La catégorie " + tabAtt[1] + 
                            " contient des applications");
                        
                } catch (SQLException ex) {
                    Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (!select)
            JOptionPane.showMessageDialog(this, "Aucune catégorie n'est sélectionnée");
        
        DefaultTableModel model = (DefaultTableModel) this.jTable4.getModel();
        this.initTabCategorie(model);
    }//GEN-LAST:event_jButtonDeleteCategorieActionPerformed

    private void jButtonDeleteUtilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteUtilisateurActionPerformed
        Boolean select = false;
        for (int i = 0; i < this.jTable2.getRowCount(); i++)
        {
            if (this.jTable2.getValueAt(i, 0).equals(true)){
                select = true;
                try {
                    PreparedStatement st = con.prepareStatement("delete from utilisateur "
                            + "where login = ?");
                    st.setString(1, this.jTable2.getValueAt(i, 1).toString());
                    st.executeUpdate();
                    con.commit();
                    st.close();
                    this.upadteTableUtilisateur();
                } catch (SQLException ex) {
                    Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (!select)
            JOptionPane.showMessageDialog(this, "Aucun utilisateur n'est sélectionné");
    }//GEN-LAST:event_jButtonDeleteUtilisateurActionPerformed

    private void jButtonAddApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddApplicationActionPerformed
        this.jScrollPane5.setVisible(false);
        this.jPanelAddApplication.setVisible(true);
    }//GEN-LAST:event_jButtonAddApplicationActionPerformed

    private void jButtonAnnulerAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerAActionPerformed
        this.jScrollPane5.setVisible(true);
        this.jPanelAddApplication.setVisible(false);
        this.resetFormApplication();
    }//GEN-LAST:event_jButtonAnnulerAActionPerformed

    private void resetFormApplication()
    {
        this.jTextFieldNomA.setText("");
        this.jTextAreaDescA.setText("");
        this.jDateChooserApplication.setDate(null);
        this.jTextFieldTailleA.setText("");
        this.jTextFieldVersionAA.setText("");
    }
    
    private void jPanel12ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel12ComponentShown
        
    }//GEN-LAST:event_jPanel12ComponentShown

    private void jButtonSuivantA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuivantA1ActionPerformed
        String nomA = this.jTextFieldNomA.getText();
        String descA = this.jTextAreaDescA.getText();
        DateFormat fmt = DateFormat.getDateInstance(SHORT, FRANCE);
        String tailleA = this.jTextFieldTailleA.getText();
        String versionA =this.jTextFieldVersionAA.getText();
        
        if (!nomA.isEmpty())
        {
            if (!descA.isEmpty())
            {
                try {
                    String date = fmt.format(this.jDateChooserApplication.getDate());
                    if (!tailleA.isEmpty())
                    {
                        if (!versionA.isEmpty())
                        {
                            this.jPanelAddApplication.setVisible(false);
                            this.jPanelAddApplication2.setVisible(true);
                        }
                        else JOptionPane.showMessageDialog(this, "Version non valide");
                    }
                    else JOptionPane.showMessageDialog(this, "Taille non valide");
                } catch (Exception e) { JOptionPane.showMessageDialog(this, "Date non valide"); }
            }
            else JOptionPane.showMessageDialog(this, "Description trop courte pour l'application");
        }
        else JOptionPane.showMessageDialog(this, "Nom trop court pour l'application");
    }//GEN-LAST:event_jButtonSuivantA1ActionPerformed

    private void jPanelAddApplication2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAddApplication2ComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable6.getModel();
        this.initTabCategorie(model);
    }//GEN-LAST:event_jPanelAddApplication2ComponentShown

    private void jPanelApplicationComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelApplicationComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable5.getModel();
        this.initTabApplication(model);
    }//GEN-LAST:event_jPanelApplicationComponentShown

    private void initTabApplication(DefaultTableModel model)
    {
        PreparedStatement st;
        try {
            st = con.prepareStatement("select * from application");
            ResultSet rst = st.executeQuery();
            model.getDataVector().removeAllElements();
            while (rst.next()) {
                int idA = rst.getInt(1);
                String nomA = rst.getString(2);
                String dateA = rst.getString(3);
                String descA = rst.getString(4);
                float tailleA = rst.getFloat(5);
                float versionA = rst.getFloat(6);
                model.addRow(new Object[]{false, idA, nomA, descA, dateA, tailleA, versionA});
            }
        } catch (SQLException ex) {
            Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Bouton suivant pour sélectionner des images
     * @param evt 
     */
    private void jButtonSuivantA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuivantA2ActionPerformed
        int select = 0;
        for (int i = 0; i < this.jTable6.getRowCount(); i++)
        {
            if (this.jTable6.getValueAt(i, 0).equals(true)){
                select++;
            }
        }
        if (select == 0)
            JOptionPane.showMessageDialog(this, "Aucune catégorie n'est sélectionnée");
        else if (select > 1)
            JOptionPane.showMessageDialog(this, "Une seul catégorie peut être sélectionnée");
        else if (select == 1 ) {
            this.jPanelAddApplication2.setVisible(false);
            this.jPanelAddApplication3.setVisible(true);
        }
            
    }//GEN-LAST:event_jButtonSuivantA2ActionPerformed

    /**
     * Lorsque le jPanelAddApplication3 est affiché
     * @param evt 
     */
    private void jPanelAddApplication3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAddApplication3ComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable7.getModel();
        String sql = "select * from image";
        this.initTabImage(sql, model);
    }//GEN-LAST:event_jPanelAddApplication3ComponentShown

    /**
     * Lorsque le jPanelAddApplication4 est affiché
     * @param evt 
     */
    private void jPanelAddApplication4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAddApplication4ComponentShown
        DefaultTableModel model = (DefaultTableModel) this.jTable8.getModel();
        this.initTabSysteme(model);
    }//GEN-LAST:event_jPanelAddApplication4ComponentShown

    /**
     * Bouton suivant pour sélectionner des systemes
     * @param evt 
     */
    private void jButtonSuivantA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuivantA3ActionPerformed
        this.jPanelAddApplication3.setVisible(false);
        this.jPanelAddApplication4.setVisible(true);
    }//GEN-LAST:event_jButtonSuivantA3ActionPerformed

    /**
     * Bouton pour sauvegarder l'application
     * @param evt 
     */
    private void jButtonSaveApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveApplicationActionPerformed
        //Récupère données du formulaire 1
        String nomA = this.jTextFieldNomA.getText();
        String descA = this.jTextAreaDescA.getText();
        DateFormat fmt = DateFormat.getDateInstance(SHORT, FRANCE);
        String date = fmt.format(this.jDateChooserApplication.getDate());
        float tailleA = Float.parseFloat(this.jTextFieldTailleA.getText());
        float versionA = Float.parseFloat(this.jTextFieldVersionAA.getText());
        //Récupère données formualaire 2 (catégorie)
        int idC = 0;
        for (int i = 0; i < this.jTable6.getRowCount(); i++)
        {
            if (this.jTable6.getValueAt(i, 0).equals(true)){
                idC = Integer.parseInt(this.jTable6.getValueAt(i, 1).toString());
            }
        }
        //Insértion de l'application de base
        PreparedStatement st;
        try {
            st = con.prepareStatement("insert into application("
                    + "select numA.nextval, ?, to_date(?,'DD/MM/YYYY'), ?, ?, ?, ref(c), images_type() from categorie c where c.idC = ?)");
            st.setString(1, nomA);
            st.setString(2, date);
            st.setString(3, descA);
            st.setFloat(4, tailleA);
            st.setFloat(5, versionA);
            st.setInt(6, idC);
            st.executeQuery();
            con.commit();
            st.close();   
        } catch (SQLException ex) {
            Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Ajout de l'application dans la catégorie
        try {
            st = con.prepareStatement("insert into the (select c.applicationsC from categorie c "
                    + "where c.idC = ?) select ref(a) from application a where a.idA = (SELECT (max(idA)) FROM application)");
            st.setInt(1, idC);
            st.execute();
            con.commit();
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Ajout des images dans l'application et de la ref dans l'image
        for (int i = 0; i < this.jTable7.getRowCount(); i++)
        {
            if (this.jTable7.getValueAt(i, 0).equals(true)){
                int idI = Integer.parseInt(this.jTable7.getValueAt(i, 1).toString());
                try {
                    st = con.prepareStatement("insert into the (select a.imagesA from application a "
                            + "where a.idA = (SELECT (max(idA)) FROM application)) select ref(i) from image i where i.idI = ?");
                    st.setInt(1, idI);
                    st.execute();
                    con.commit();
                    
                    st = con.prepareStatement("select ref(a) from application a where "
                            + "a.idA = (SELECT (max(idA)) FROM application)");
                    OracleResultSet rset = (OracleResultSet) st.executeQuery();
                    rset.next();
                    oracle.sql.REF refA = rset.getREF(1);
                    PreparedStatement ps = con.prepareStatement("update image i set "
                            + "i.applicationI = ? where idI = ?");
                    ps.setRef(1, refA);
                    ps.setInt(2, idI);
                    ps.execute();
                    con.commit();
                    ps.close();
                } catch (SQLException ex) {
                    Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        //Ajout des systemes pour l'application
        for (int i = 0; i < this.jTable8.getRowCount(); i++)
        {
            if (this.jTable8.getValueAt(i, 0).equals(true)){
                String nomS = this.jTable8.getValueAt(i, 1).toString();
                try {
                    st = con.prepareStatement("insert into applicationSysteme("
                            + "select ref(s), ref(a) from systeme s, application a where s.nomS = ? and a.idA = (SELECT (max(idA)) FROM application))");
                    st.setString(1, nomS);
                    st.execute();
                    con.commit();
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonSaveApplicationActionPerformed

    /**
     * Permet de supprimer les systèmes cochés
     * @param evt 
     */
    private void jButtonDeleteSystemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSystemeActionPerformed
        int count = 0;
        for (int i = 0; i < this.jTable3.getRowCount(); i++)
        {
            if (this.jTable3.getValueAt(i, 0).equals(true)){
                count++;
                String nomS = this.jTable3.getValueAt(i, 1).toString();
                try {
                    PreparedStatement st;
                    st = con.prepareStatement("select count(*) from applicationSysteme where "
                            + "systemeA = (select ref(s) from systeme s where nomS = ?)");
                    st.setString(1, nomS);
                    OracleResultSet rset = (OracleResultSet) st.executeQuery();
                    rset.next();
                    if (rset.getInt(1) == 0)
                    {
                        st = con.prepareStatement("delete systeme where nomS = ?");
                        st.setString(1, nomS);
                        st.execute();
                        con.commit();
                        st.close();
                    }
                    else JOptionPane.showMessageDialog(this, "Vous ne pouvez pas supprimer le systeme : " + nomS + " "
                            + "car il contient des applications");
                } catch (SQLException ex) {
                    Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (count == 0)
            JOptionPane.showMessageDialog(this, "Aucun système sélectionné");
        
        DefaultTableModel model = (DefaultTableModel) this.jTable3.getModel();
        this.initTabSysteme(model);
    }//GEN-LAST:event_jButtonDeleteSystemeActionPerformed

    private void jButtonAnnulerA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerA2ActionPerformed
        this.jScrollPane5.setVisible(true);
        this.jPanelAddApplication2.setVisible(false);
        this.resetFormApplication();
    }//GEN-LAST:event_jButtonAnnulerA2ActionPerformed

    private void jButtonAnnulerA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerA3ActionPerformed
        this.jScrollPane5.setVisible(true);
        this.jPanelAddApplication3.setVisible(false);
        this.resetFormApplication();
    }//GEN-LAST:event_jButtonAnnulerA3ActionPerformed

    private void jButtonAnnulerA4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerA4ActionPerformed
        this.jScrollPane5.setVisible(true);
        this.jPanelAddApplication3.setVisible(false);
        this.resetFormApplication();
    }//GEN-LAST:event_jButtonAnnulerA4ActionPerformed

    private void jButtonSupprimerImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerImageActionPerformed
        for (int i = 0; i < this.jTable1.getRowCount(); i++)
        {
            if (this.jTable1.getValueAt(i, 0).equals(true)){
                PreparedStatement st;
                int idI = Integer.parseInt(this.jTable1.getValueAt(i, 1).toString());
                try {
                    st = con.prepareStatement("select value(i) from image i "
                            + "where i.idI = ?");
                    st.setInt(1, idI);
                    OracleResultSet rset = (OracleResultSet) st.executeQuery();
                    rset.next();
                    STRUCT stt = (STRUCT) rset.getSTRUCT(1);
                    Object[] tabAtt = stt.getAttributes();
                    REF refA = (REF) tabAtt[6];
                    STRUCT ste = (STRUCT) refA.getSTRUCT();
                    Object[] tabAttA = ste.getAttributes();
                    System.out.println(tabAttA[0]);
                    System.out.println(idI);
                    st = con.prepareStatement("delete the ("
                            + "select a.imagesA from application a "
                            + "where a.idA=?) e where e.imageR.idI=?");
                    st.setInt(1, Integer.parseInt(tabAttA[0].toString()));
                    st.setInt(2, idI);
                    st.execute();
                    con.commit();
                    st = con.prepareStatement("delete from image"
                            + " where idI=?");
                    st.setInt(1, idI);
                    st.execute();
                    con.commit();
                    
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(WindowAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonSupprimerImageActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAddApplication;
    private javax.swing.JButton jButtonAddCategorie;
    private javax.swing.JButton jButtonAddSysteme;
    private javax.swing.JButton jButtonAddUtilisateur;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonAnnulerA;
    private javax.swing.JButton jButtonAnnulerA2;
    private javax.swing.JButton jButtonAnnulerA3;
    private javax.swing.JButton jButtonAnnulerA4;
    private javax.swing.JButton jButtonAnnulerC;
    private javax.swing.JButton jButtonAnnulerImage;
    private javax.swing.JButton jButtonAnnulerS;
    private javax.swing.JButton jButtonDeleteCategorie;
    private javax.swing.JButton jButtonDeleteSysteme;
    private javax.swing.JButton jButtonDeleteUtilisateur;
    private javax.swing.JButton jButtonParcourirI;
    private javax.swing.JButton jButtonSaveApplication;
    private javax.swing.JButton jButtonSaveC;
    private javax.swing.JButton jButtonSaveImage;
    private javax.swing.JButton jButtonSaveSysteme;
    private javax.swing.JButton jButtonSaveUtilisateur;
    private javax.swing.JButton jButtonSuivantA1;
    private javax.swing.JButton jButtonSuivantA2;
    private javax.swing.JButton jButtonSuivantA3;
    private javax.swing.JButton jButtonSupprimerImage;
    private com.toedter.calendar.JDateChooser jDateChooserApplication;
    private com.toedter.calendar.JDateChooser jDateChooserImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAddApplication;
    private javax.swing.JPanel jPanelAddApplication2;
    private javax.swing.JPanel jPanelAddApplication3;
    private javax.swing.JPanel jPanelAddApplication4;
    private javax.swing.JPanel jPanelAddCategorie;
    private javax.swing.JPanel jPanelAddImage;
    private javax.swing.JPanel jPanelAddSysteme;
    private javax.swing.JPanel jPanelAddUtilisateur;
    private javax.swing.JPanel jPanelApplication;
    private javax.swing.JPanel jPanelCategorie;
    private javax.swing.JPanel jPanelImage;
    private javax.swing.JPanel jPanelSysteme;
    private javax.swing.JPanel jPanelUtilisateur;
    private javax.swing.JPasswordField jPasswordFieldPass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JScrollPane jScrollPaneImage;
    private javax.swing.JTabbedPane jTabbedPaneImage;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTextArea jTextAreaDescA;
    private javax.swing.JTextArea jTextAreaDescriptionI;
    private javax.swing.JTextField jTextFieldFabriquantS;
    private javax.swing.JTextField jTextFieldLogin;
    private javax.swing.JTextField jTextFieldNomA;
    private javax.swing.JTextField jTextFieldNomC;
    private javax.swing.JTextField jTextFieldNomI;
    private javax.swing.JTextField jTextFieldNomS;
    private javax.swing.JTextField jTextFieldTailleA;
    private javax.swing.JTextField jTextFieldUrlI;
    private javax.swing.JTextField jTextFieldVersionA;
    private javax.swing.JTextField jTextFieldVersionAA;
    private javax.swing.JToggleButton jToggleButtonAddImage;
    // End of variables declaration//GEN-END:variables
}
